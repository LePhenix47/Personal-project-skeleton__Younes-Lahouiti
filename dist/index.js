(()=>{"use strict";(()=>{const{log:n,error:r,table:e,time:t,timeEnd:o,timeStamp:a,timeLog:i,assert:s,clear:l,count:c,countReset:h,group:b,groupCollapsed:u,groupEnd:d,profile:p,profileEnd:m,trace:g,warn:v,debug:f,info:w,dir:y,dirxml:k}=console,x=document.createElement("template");x.innerHTML='\n  <style>\n    \n/* \n    Hides the element and all its descendants from view\n */\n.hide {\n    display: none !important;\n}\n\n/* \n    Hides the element from view except for screen readers \n    \n    - Good for accessibilty and by consequence SEO\n*/\n.screen-readers-only {\n    /*    \n    Positions the element off the screen \n    */ \n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n\n    /*    \n    Sets the dimensions of the element to 1Ã—1 px \n    */ \n    height: 1px;\n    width: 1px;\n\n    /*    \n    Hides any content that overflows the element \n    */ \n    overflow: hidden;\n\n    /*    \n    Positions the element absolutely \n    */ \n    position: absolute;\n\n    /*    \n    Prevents line breaks in the element \n    */ \n    white-space: nowrap;\n}\n\n/* \n    Disables pointer (click on desktop and tap on mobile) events for the element and its descendants \n*/\n.no-pointer-events {\n    pointer-events: none;\n}\n\n\n    \n@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@100;400;500;700&display=swap);\n@media(prefers-reduced-motion:reduce) {\n    *, :after, :before {\n        animation: none !important;\n        transition: none !important\n    }\n}\n\n*, :after, :before {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0\n}\n\n::-moz-selection {\n    -webkit-text-stroke: transparent;\n    background-color: var(--selection-bg-color);\n    color: var(--selection-color)\n}\n\n::selection {\n    -webkit-text-stroke: transparent;\n    background-color: var(--selection-bg-color);\n    color: var(--selection-color)\n}\n\nhtml {\n    color-scheme: dark light;\n    scroll-behavior: smooth\n}\n\nbody {\n    background-color: var(--bg-primary);\n    color: var(--color-primary);\n    min-height: 100vh;\n    overflow-x: hidden;\n    transition: background-color .65s ease-in-out, color .35s ease-in-out\n}\n\n:is(ul, ol) {\n    list-style-type: none\n}\n\nbutton {\n    background-color: transparent;\n    border-color: transparent;\n    color: inherit;\n    font-family: inherit\n}\n\nbutton:hover {\n    cursor: pointer\n}\n\nbutton:hover:disabled {\n    cursor: not-allowed\n}\n\ninput {\n    border-color: transparent;\n    font-family: inherit;\n    outline-color: transparent\n}\n\ninput:hover {\n    cursor: pointer\n}\n\ninput:focus {\n    border-color: transparent;\n    outline: transparent\n}\n\ninput:disabled {\n    cursor: not-allowed\n}\n\ntextarea {\n    font-family: inherit\n}\n\ntextarea, textarea:focus {\n    border-color: transparent\n}\n\ntextarea:focus {\n    outline: transparent\n}\n\na {\n    color: inherit;\n    text-decoration: none\n}\n\na:visited {\n    color: currentColor\n}\n\nlabel:hover {\n    cursor: pointer\n}\n\nfieldset {\n    border-color: transparent\n}\n\nlegend {\n    position: static\n}\n\ndialog {\n    inset: 50%;\n    margin: 0;\n    padding: 0;\n    position: fixed;\n    translate: -50% -50%;\n    z-index: 0\n}\n\ndialog, select {\n    border: transparent\n}\n\nselect {\n    font-family: inherit\n}\n\nselect:hover {\n    cursor: pointer\n}\n\noption {\n    font-family: inherit\n}\n\n:is(p, h1, h2, h3, h4, h5, h6, span):empty {\n    display: none !important\n}\ninput[type=text]:hover {\n  cursor: text;\n}\ninput[type=button]:hover {\n  cursor: pointer;\n}\ninput[type=date]:hover {\n  cursor: text;\n}\ninput[type=datetime]:hover {\n  cursor: text;\n}\ninput[type=datetime-local]:hover {\n  cursor: text;\n}\ninput[type=email]:hover {\n  cursor: text;\n}\ninput[type=month]:hover {\n  cursor: text;\n}\ninput[type=week]:hover {\n  cursor: text;\n}\ninput[type=password]:hover {\n  cursor: text;\n}\ninput[type=tel]:hover {\n  cursor: text;\n}\ninput[type=time]:hover {\n  cursor: text;\n}\ninput[type=url]:hover {\n  cursor: text;\n}\ninput[type=submit]:hover {\n  cursor: pointer;\n}\ninput[type=reset]:hover {\n  cursor: pointer;\n}\ninput[type=image]:hover {\n  cursor: pointer;\n}\ninput[type=hidden]:hover {\n  cursor: pointer;\n}\ninput[type=file] {\n  --file-selector-display: initial;\n  --file-selector-width: 80px;\n  --file-selector-height: 21px;\n}\ninput[type=file]:hover {\n  cursor: pointer;\n}\ninput[type=file]::file-selector-button {\n  display: var(--file-selector-display);\n  height: var(--file-selector-height);\n  width: var(--file-selector-width);\n}\ninput[type=color] {\n  background-color: transparent;\n  --color-swatch-display: inline-block;\n  --color-swatch-height: 100%;\n  --color-swatch-border-width: 1px;\n  --color-swatch-border-color: currentColor;\n}\ninput[type=color]:hover {\n  cursor: pointer;\n}\ninput[type=color]::-moz-color-swatch {\n  display: var(--color-swatch-display);\n  height: var(--color-swatch-height);\n  border: var(--color-swatch-border-width) solid var(--color-swatch-border-color);\n}\ninput[type=color]::-webkit-color-swatch {\n  display: var(--color-swatch-display);\n  height: var(--color-swatch-height);\n  border: var(--color-swatch-border-width) solid var(--color-swatch-border-color);\n}\ninput[type=search] {\n  --cancel-button-display: initial;\n  --results-button-display: initial;\n}\ninput[type=search]:hover {\n  cursor: text;\n}\ninput[type=search]::-webkit-search-cancel-button {\n  display: var(--cancel-button-display);\n}\ninput[type=search]::-webkit-search-results-button {\n  display: var(--results-button-display);\n}\ninput[type=number] {\n  --inner-spin-appearance: auto;\n  --outer-spin-appearance: auto;\n  --moz-appearance: initial;\n  /*\n      Ignore the warning, this is to reset the input on Firefox\n      */\n  -moz-appearance: var(--moz-appearance);\n}\ninput[type=number]:hover {\n  cursor: text;\n}\ninput[type=number]::-webkit-inner-spin-button {\n  appearance: var(--inner-spin-appearance);\n}\ninput[type=number]::-webkit-outer-spin-button {\n  appearance: var(--outer-spin-appearance);\n}\ninput[type=range] {\n  border-radius: var(--thumb-border-radius);\n  --track-width: 160px;\n  --track-height: 20px;\n  --track-bg: #e9e9ed;\n  --track-appearance: none;\n  background-color: var(--track-bg);\n  appearance: var(--track-appearance);\n  overflow: hidden;\n  --thumb-appearance: none;\n  --thumb-bg: #484851;\n  --thumb-border-color: white;\n  --thumb-border-width: 0px;\n  --thumb-border-radius: 100vmax;\n  --thumb-width: 15px;\n  --thumb-height: 15px;\n  --inner-track-size: calc(var(--track-width));\n  --inner-track-offset: calc(\n    -1 * var(--track-width) - var(--thumb-width) / 2\n  );\n  --inner-track-bg: #2374ff;\n}\ninput[type=range]:hover {\n  cursor: grab;\n}\ninput[type=range]:active {\n  cursor: grabbing;\n}\ninput[type=range]::-webkit-slider-runnable-track {\n  background-color: var(--track-bg);\n  width: var(--track-width);\n  height: var(--track-bg);\n}\ninput[type=range]::-moz-range-track {\n  background-color: var(--track-bg);\n  width: var(--track-width);\n  height: var(--track-bg);\n}\ninput[type=range]::-webkit-slider-thumb {\n  appearance: var(--thumb-appearance);\n  -webkit-appearance: var(--thumb-appearance);\n  background-color: var(--thumb-bg);\n  color: var(--thumb-bg);\n  border: var(--thumb-border-width) solid var(--thumb-border-color);\n  border-radius: var(--thumb-border-radius);\n  width: var(--thumb-width);\n  height: var(--thumb-height);\n  box-shadow: var(--inner-track-offset) 0 0 var(--inner-track-size) var(--inner-track-bg);\n}\ninput[type=range]::-moz-range-thumb {\n  appearance: var(--thumb-appearance) !important;\n  background-color: var(--thumb-bg);\n  border: var(--thumb-border-width) solid var(--thumb-border-color);\n  border-radius: var(--thumb-border-radius);\n  width: var(--thumb-width);\n  height: var(--thumb-height);\n  box-shadow: var(--inner-track-offset) 0 0 var(--inner-track-size) var(--inner-track-bg);\n}\n\n    \n:host {\n    --bg-primary: rgb(255, 255, 255);\n    --bg-secondary: #f0efef;\n    --bg-tertiary: #676767;\n\n    --semi-transparent-bg: rgba(255, 255, 255, 50%);\n\n    --color-primary: black;\n    --color-secondary: gray;\n\n    --scrollbar-track-bg-color: white;\n\n    --disabled-button-bg: #afafaf;\n\n    --scrollbar-thumb-bg-color: #545454;\n    --scrollbar-thumb-bg-color--hover: #757575;\n    --scrollbar-thumb-bg-color--active: #b0b0b0;\n\n    --selection-bg-color: hwb(240 0% 0%);\n    --selection-color: white;\n}\n\n::backdrop {\n    --backdrop-bg-color: rgba(255, 255, 255, 0.5);\n\n    --scrollbar-track-bg-color: white;\n\n    --scrollbar-thumb-bg-color: #545454;\n    --scrollbar-thumb-bg-color--hover: #757575;\n    --scrollbar-thumb-bg-color--active: #b0b0b0;\n}\n\n    \n@media (prefers-color-scheme: dark) {\n    :host {\n        --bg-primary: black;\n        --bg-secondary: #232323;\n        --bg-tertiary: #7a7a7a;\n\n        --color-primary: white;\n\n        --semi-transparent-bg: rgba(0, 0, 0, 50%);\n\n        --scrollbar-track-bg-color: black;\n        --scrollbar-thumb-bg-color: #ababab;\n        --scrollbar-thumb-bg-color--hover: #8a8a8a;\n        --scrollbar-thumb-bg-color--active: #4f4f4f;\n\n        --selection-bg: #838383;\n        --selection-color: white;\n\n        --selection-bg-color: orange;\n        --selection-color: black;\n    }\n\n\n    ::backdrop {\n        --backdrop-bg-color: rgba(0, 0, 0, 0.5);\n\n        --scrollbar-track-bg-color: black;\n\n        --scrollbar-thumb-bg-color: #ababab;\n        --scrollbar-thumb-bg-color--hover: #8a8a8a;\n        --scrollbar-thumb-bg-color--active: #4f4f4f;\n    }\n}\n\n\n    /* Actual CSS style for the web component*/\n    \n user-component{\n  isolation: isolate;\n  /* Other CSS styles here */\n }\n\n  </style>\n  \n  \n <figure>\n  <slot name="title" />\n  <slot name="image" />\n </figure>\n\n';class M extends HTMLElement{constructor(){super();const n=this.attachShadow({mode:"open"}),r=x.content.cloneNode(!0);n.appendChild(r)}static get observedAttributes(){return[]}connectedCallback(){}disconnectedCallback(){}attributeChangedCallback(n,r,e){n}}function z(n){return n.toString(16)}function C(n,r,e){return n.substring(r,e)}customElements.define("web-component",M);class H{fromRgbToHex(n){const{red:r,green:e,blue:t}=n;return`#${z(r)}${z(e)}${z(t)};`}fromHexToRgb(n){((null==n?void 0:n.length)<6||(null==n?void 0:n.length)>7)&&console.error(`Error: Unexpected color argument length passed, was expecting a 6 or 7 characters long string but instead got ${n.length}`);let r=n;var e,t;"#"===n.charAt(0)&&(e=1,r=n.slice(e,t));let o=[C(r,0,2),C(r,2,4),C(r,4,6)];for(let n=0;n<o.length;n++){let r=o[n];o[n]=Number(`0x${r}`)}return{red:Number(o[0]),green:Number(o[1]),blue:Number(o[2])}}fromRgbToHsl(n){const{red:r,green:e,blue:t}=n;(!Number.isInteger(r)||!Number.isInteger(e)||!Number.isInteger(t)||r<0||r>255||e<0||e>255||t<0||t>255)&&console.error(`Invalid RGB color values. Expected integers between 0 and 255, but received: red=${r}, green=${e}, blue=${t}`);const o=r/255,a=e/255,i=t/255,s=Math.max(o,a,i),l=Math.min(o,a,i),c=s-l,h=(s+l)/2;let b,u;if(s===l)u=0,b=0;else switch(b=h>.5?c/(2-s-l):c/(s+l),s){case o:u=((a-i)/c+(a<i?6:0))/6;break;case a:u=((i-o)/c+2)/6;break;case i:u=((o-a)/c+4)/6}return{hue:Math.round(360*u)%360,saturation:Math.round(100*b),lightness:Math.round(100*h)}}fromHslToRgb(n){const{hue:r,saturation:e,lightness:t}=n,o=e/100,a=t/100;function i(n){const e=(n+r/30)%12,t=o*Math.min(a,1-a);return a-t*Math.max(-1,Math.min(e-3,9-e,1))}return{red:Math.round(255*i(0)),green:Math.round(255*i(8)),blue:Math.round(255*i(4))}}fromRgbToHwb(n){const{red:r,green:e,blue:t}=n,o=r/255,a=e/255,i=t/255,{hue:s}=this.fromRgbToHsl(n),l=Math.min(o,a,i),c=1-Math.max(o,a,i);return{hue:s%360,whiteness:Math.round(100*l),blackness:Math.round(100*c)}}fromHwbToRgb(n){const{hue:r,whiteness:e,blackness:t}=n,o=e/100,a=t/100;if(o+a>=1){const n=o/(o+a);return{red:Math.round(100*n),green:Math.round(100*n),blue:Math.round(100*n)}}const{red:i,green:s,blue:l}=this.fromHslToRgb({hue:r,saturation:100,lightness:50}),c=i/255*(1-o-a)+o,h=s/255*(1-o-a)+o,b=l/255*(1-o-a)+o;return{red:Math.round(255*c),green:Math.round(255*h),blue:Math.round(255*b)}}fromRgbToHsv(n){const{red:r,green:e,blue:t}=n,o=Math.min(r,e,t),a=Math.max(r,e,t),{hue:i}=this.fromRgbToHsl(n),s=0!==a?1-o/a:0,l=a/255;return{hue:i%360,saturation:Math.round(100*s),value:Math.round(100*l)}}fromHsvToRgb(n){const{hue:r,saturation:e,value:t}=n,o=t/100,a=o*(e/100),i=r/60,s=a*(1-Math.abs(i%2-1)),l=o-a;let c,h,b;return i>=0&&i<1?(c=a,h=s,b=0):i>=1&&i<2?(c=s,h=a,b=0):i>=2&&i<3?(c=0,h=a,b=s):i>=3&&i<4?(c=0,h=s,b=a):i>=4&&i<5?(c=s,h=0,b=a):(c=a,h=0,b=s),c+=l,h+=l,b+=l,{red:Math.round(255*c),green:Math.round(255*h),blue:Math.round(255*b)}}}const R=new class extends H{constructor(n,r){super(),this.color=r,this.normalizedColor,this.currentModel=n,this.normalizeToRgb()}normalizeToRgb(){switch(this.currentModel){case"hex":this.normalizedColor=this.fromHexToRgb(this.color);break;case"rgb":this.normalizedColor=this.color;break;case"hsl":this.normalizedColor=this.fromHslToRgb(this.color);break;case"hwb":this.normalizedColor=this.fromHwbToRgb(this.color);break;case"hsv":this.normalizedColor=this.fromHsvToRgb(this.color);break;default:throw new Error("Invalid color model.")}}convertTo(n){switch(n){case"hex":return this.fromRgbToHex(this.normalizedColor);case"rgb":return this.normalizedColor;case"hsl":return this.fromRgbToHsl(this.normalizedColor);case"hwb":return this.fromRgbToHwb(this.normalizedColor);case"hsv":return this.fromRgbToHsv(this.normalizedColor);default:throw new Error("Invalid color model.")}}getAllColorModels(){return[this.fromRgbToHex(this.normalizedColor),this.normalizedColor,this.fromRgbToHsl(this.normalizedColor),this.fromRgbToHwb(this.normalizedColor),this.fromRgbToHsv(this.normalizedColor)]}}("hwb",{hue:200,whiteness:25,blackness:55});n("Color to convert:",R.color),n(R.getAllColorModels())})()})();